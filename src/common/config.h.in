#include <linux/limits.h>

// Emergency paths
#define CPUPOWER_LIB_PATH   "@CPUPOWER_LIBDIR@"
#define FREEIPMI_LIB_PATH   "@FREEIPMI_LIBDIR@"
#define SLURM_LIB_PATH      "@SLURM_LIBDIR@"
#define PAPI_LIB_PATH       "@PAPI_LIBDIR@"
#define GSL_LIB_PATH        "@GSL_LIBDIR@"
#define EAR_INSTALL_PATH    "@prefix@"

// File names
#define IMPI_LIB_PATH		"lib/libear.so"
#define IMPI_TRACE_LIB_PATH	"lib/libeart.so"
#define OMPI_LIB_PATH		"lib/libear_ompi.so"
#define OMPI_TRACE_LIB_PATH	"lib/libeart_ompi.so"
#define EAR_DAEMON_PATH     "sbin/eard"
#define EAR_CONF_FILE		"ear.conf"
#define EAR_LINK_FILE		"ear.link"

// Compile version type
#define BUILD_TYPE			@BUILD_TYPE@
#define DEVELOPMENT			0
#define DEBUG				1
#define RELEASE				2
#define RELEASE_LRZ			3

#define BUILD(type) \
	type == BUILD_TYPE

// Database
#define DB_FILES			@DB_FILES@
#define DB_MYSQL			@DB_MYSQL@

// EARL Default values and configuration
#define EAR_BOOST
#define PERFORMANCE_GAIN 	0.75  	// minimum performance efficiency gain for min_time to solution power policy
#define EAR_ACCEPTED_TH 	0.05 	// Accepted th when comparing not discrete values , for instance power. 5% is allowed in this case
#define EAR_MIN_P_STATE 	3 		// Default p_state used with min_time_to_solution power policy
#define USE_TURBO			0 		// Turbo allowed or not. Turbo on is not supported in this version
#define RESET_FREQ			0		// Default frequency is reset between two consequtive loops or not. 0 means not reset
#define MAX_POWER_ERROR		0.05 	// used to configure the frequency for power measurements. Configure the min time between measurements to have a maximum % of error
#define MAX_DYNAIS_OVERHEAD	5 		// Maximum % of overhead allowed for dynais overhead. If overhead > MAX_DYNAIS_OVERHEAD dynais is set off after computing the first signature
#define MAX_POLICY_TRIES	3 		// Maximum number of tries (per loop) before going to default frequency
#define DEMO				1 		// Used when doing EAR demos. More information is reported
#define MAX_TIME_DYNAIS_WITHOUT_SIGNATURE   30		// Maximum time, in seconds, EAR will run in dynais driven mode before going to periodic mode 
#define MPI_CALLS_TO_CHECK_PERIODIC         1000	// EAR will check periodically (every N mpi calls) 
#define PERIOD                              30		// Period (in seconds) to compute the signature used in periodic mode


// EARD default values and configuration
#define POWERMON_FREQ		30 			// Frequency for periodic power monitoring
#define DAEMON_PORT_NUMBER	50000 		// Default port used by the power monitoring
#define USE_EARDB			1			// Sets the EARD to report directly to the DB or use the EARDB

// EARGMD default values and configuration
#define DEFAULT_T1			60 			// Default period T1 used by the global mamager in seconds 
#define DEFAULT_T2			600			// Default period T2 used by the global mamager in seconds. T2 should be multiple of T1 
#define MAX_ENERGY			300 		// Energy limit (in Joules) consumed by the cluster during period T2
#define EARGM_PORT_NUMBER	60000		// Default port used by the global manager


#define LARGE_CLUSTER	0			// This flag affects the data types and insertions into the DB
