Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.5.239 Build 20170817

Compiler options: -I/home/xjcorbalan/git/EAR/tests/functionals -I/home/xjcorbalan/git/EAR/src/common -I/home/xjcorbalan/git/EAR/src/daemon -I/home/xjcorbalan/git/EAR/src/library -I/opt/intel/compilers_and_libraries_2017.5.239/linux/mpi/intel64/include -O1 -malign-double -vec-threshold3 -xCORE-AVX512 -qopt-report=5 -o simd_test_with_ear -L/opt/intel/compilers_and_libraries_2017.5.239/linux/mpi/intel64/lib/release_mt -L/opt/intel/compilers_and_libraries_2017.5.239/linux/mpi/intel64/lib -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker /opt/intel/compilers_and_libraries_2017.5.239/linux/mpi/intel64/lib/release_mt -Xlinker -rpath -Xlinker /opt/intel/compilers_and_libraries_2017.5.239/linux/mpi/intel64/lib -Xlinker -rpath -Xlinker /opt/intel/mpi-rt/2017.0.0/intel64/lib/release_mt -Xlinker -rpath -Xlinker /opt/intel/mpi-rt/2017.0.0/intel64/lib -lmpifort -lmpi -lmpigi -ldl -lrt -lpthread

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [1/14=7.1%] simd_test_with_ear.c(266,1)
  -> (270,9) usage() (isz = 5) (sz = 7)
     [[ Callee not marked with inlining pragma  <1>]]
  -> EXTERN: (272,5) MPI_Init(int *, char ***)
  -> EXTERN: (273,5) MPI_Comm_rank(MPI_Comm, int *)
  -> EXTERN: (276,20) strtoul(const char *__restrict__, char **__restrict__, int)
  -> EXTERN: (277,10) atoi(const char *)
  -> EXTERN: (281,18) printf(const char *__restrict__, ...)
  -> INLINE: (282,29) run_test(int) (isz = 402) (sz = 407)
    -> INLINE: (210,17) sse2_dp_add128() (isz = 31) (sz = 34)
      -> EXTERN: (41,13) _mm_add_pd(struct __m128d, struct __m128d)
    -> INLINE: (211,17) sse2_dp_mul128() (isz = 38) (sz = 41)
      -> EXTERN: (60,13) _mm_mul_pd(struct __m128d, struct __m128d)
      -> EXTERN: (61,13) _mm_mul_pd(struct __m128d, struct __m128d)
    -> INLINE: (212,17) fma_dp_fmadd128() (isz = 37) (sz = 40)
      -> EXTERN: (81,13) _mm_fmadd_pd(struct __m128d, struct __m128d, struct __m128d)
    -> INLINE: (213,17) avx_dp_add256() (isz = 38) (sz = 41)
      -> EXTERN: (100,13) _mm256_add_pd(struct __m256d, struct __m256d)
      -> EXTERN: (101,13) _mm256_add_pd(struct __m256d, struct __m256d)
    -> INLINE: (214,17) avx_dp_mul256() (isz = 31) (sz = 34)
      -> EXTERN: (119,13) _mm256_mul_pd(struct __m256d, struct __m256d)
    -> INLINE: (215,17) fma_dp_fmadd256() (isz = 37) (sz = 40)
      -> EXTERN: (139,13) _mm256_fmadd_pd(struct __m256d, struct __m256d, struct __m256d)
    -> INLINE: (217,17) avx512_dp_add512() (isz = 50) (sz = 53)
      -> EXTERN: (156,13) _mm512_add_round_pd(union __m512d, union __m512d, int)
      -> EXTERN: (157,13) _mm512_add_round_pd(union __m512d, union __m512d, int)
      -> EXTERN: (158,13) _mm512_add_round_pd(union __m512d, union __m512d, int)
      -> EXTERN: (159,13) _mm512_add_round_pd(union __m512d, union __m512d, int)
    -> INLINE: (218,17) avx512_dp_mul512() (isz = 32) (sz = 35)
      -> EXTERN: (178,13) _mm512_mul_round_pd(union __m512d, union __m512d, int)
    -> INLINE: (219,17) avx512_dp_fmadd512() (isz = 38) (sz = 41)
      -> EXTERN: (198,13) _mm512_fmadd_round_pd(union __m512d, union __m512d, union __m512d, int)
  -> EXTERN: (285,5) MPI_Finalize(void)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]

remark #15320: routine skipped: loop optimizations disabled

    Report from: Code generation optimizations [cg]

simd_test_with_ear.c(266,1):remark #34051: REGISTER ALLOCATION : [main] simd_test_with_ear.c:266

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r13 zmm0-zmm3]
        
    Routine temporaries
        Total         :      73
            Global    :      44
            Local     :      29
        Regenerable   :      15
        Spilled       :       1
        
    Routine stack
        Variables     :      20 bytes*
            Reads     :       6 [6.00e+00 ~ 0.0%]
            Writes    :       4 [4.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage()) [2/14=14.3%] simd_test_with_ear.c(260,1)
  -> EXTERN: (261,5) printf(const char *__restrict__, ...)
  -> EXTERN: (262,5) exit(int)


    Report from: Offload optimizations [offload]

remark #15320: routine skipped: loop optimizations disabled

    Report from: Code generation optimizations [cg]

simd_test_with_ear.c(260,1):remark #34051: REGISTER ALLOCATION : [usage] simd_test_with_ear.c:260

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: sse2_dp_add128()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (sse2_dp_add128()) simd_test_with_ear.c(28,1)

===========================================================================

Begin optimization report for: sse2_dp_mul128()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (sse2_dp_mul128()) simd_test_with_ear.c(48,1)

===========================================================================

Begin optimization report for: fma_dp_fmadd128()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (fma_dp_fmadd128()) simd_test_with_ear.c(68,1)

===========================================================================

Begin optimization report for: avx_dp_add256()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (avx_dp_add256()) simd_test_with_ear.c(88,1)

===========================================================================

Begin optimization report for: avx_dp_mul256()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (avx_dp_mul256()) simd_test_with_ear.c(108,1)

===========================================================================

Begin optimization report for: fma_dp_fmadd256()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (fma_dp_fmadd256()) simd_test_with_ear.c(126,1)

===========================================================================

Begin optimization report for: avx512_dp_add512()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (avx512_dp_add512()) simd_test_with_ear.c(147,1)

===========================================================================

Begin optimization report for: avx512_dp_mul512()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (avx512_dp_mul512()) simd_test_with_ear.c(167,1)

===========================================================================

Begin optimization report for: avx512_dp_fmadd512()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (avx512_dp_fmadd512()) simd_test_with_ear.c(185,1)

===========================================================================

Begin optimization report for: run_test(int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (run_test(int)) simd_test_with_ear.c(207,1)

===========================================================================

Begin optimization report for: get_test_name(int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (get_test_name(int)) [13/14=92.9%] simd_test_with_ear.c(225,1)


    Report from: Offload optimizations [offload]

remark #15320: routine skipped: loop optimizations disabled

    Report from: Code generation optimizations [cg]

simd_test_with_ear.c(225,1):remark #34051: REGISTER ALLOCATION : [get_test_name] simd_test_with_ear.c:225

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      27
            Global    :       7
            Local     :      20
        Regenerable   :      18
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: get_test_ops(int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (get_test_ops(int)) [14/14=100.0%] simd_test_with_ear.c(242,1)


    Report from: Offload optimizations [offload]

remark #15320: routine skipped: loop optimizations disabled

    Report from: Code generation optimizations [cg]

simd_test_with_ear.c(242,1):remark #34051: REGISTER ALLOCATION : [get_test_ops] simd_test_with_ear.c:242

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   63[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm31 k0-k7]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       7
            Local     :      11
        Regenerable   :       9
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> The compiler's heuristics indicate that the function is not profitable to 
    inline.  Override this decision by adding "inline 
    __attribute__((always_inline))" to the declaration of the called function, 
    or add "#pragma forceinline" before the call site.

